const int trigPin = 9;
const int echoPin = 10;

const int ledVerde = 2;
const int ledAmarelo = 3;
const int ledVermelho = 4;
const int ledBomba = 5;

long duracao;
int distancia;
bool bombaLigada = false;

void setup() {
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  pinMode(ledVerde, OUTPUT);
  pinMode(ledAmarelo, OUTPUT);
  pinMode(ledVermelho, OUTPUT);
  pinMode(ledBomba, OUTPUT);
  
  Serial.begin(9600);
  Serial.println("=== Sistema de Nível do Tanque Iniciado ===");
}

void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  duracao = pulseIn(echoPin, HIGH);
  distancia = duracao * 0.034 / 2;
  
  if (distancia <= 0 || distancia > 400) {
    Serial.println("Leitura inválida!");
    delay(500);
    return;
  }
  
  Serial.print("Distância medida: ");
  Serial.print(distancia);
  Serial.println(" cm");
  
  if (distancia > 200) {
    digitalWrite(ledVerde, HIGH);
    digitalWrite(ledAmarelo, LOW);
    digitalWrite(ledVermelho, LOW);
    digitalWrite(ledBomba, LOW);
    bombaLigada = false;
  }
  else if (distancia <= 200 && distancia > 50) {
    digitalWrite(ledVerde, LOW);
    digitalWrite(ledAmarelo, HIGH);
    digitalWrite(ledVermelho, LOW);
    digitalWrite(ledBomba, bombaLigada ? HIGH : LOW);
  }
  else {
    digitalWrite(ledVerde, LOW);
    digitalWrite(ledAmarelo, LOW);
    digitalWrite(ledVermelho, HIGH);
    digitalWrite(ledBomba, HIGH);
    bombaLigada = true;
  }
  
  delay(500);
}